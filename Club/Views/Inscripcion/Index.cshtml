@model Club.Models.VM_ACTIVIDAD_INSCRIPCION_2
@using GridMvc.Html
@using PagedList.Mvc;
@using PagedList;
@{
    ViewBag.Title = "Index";
}

<content>
    <section class="content-header">
        <h2>Index</h2>



        @*<div class="row">
                <div class="col-md-12">
                 <input type="text" id="myInput" onkeyup="myFunction()" placeholder="Search for names.." title="Type in a name">
                 @Html.Grid(Model.lActividad).Named("Lista de Actividades").Columns(
                 c =>
                 {
                     c.Add(x => x.FECHA_INICIO).Titled("Fecha Inicio").Filterable(true).Sortable(true);
                     c.Add(x => x.FECHA_FIN).Titled("Fecha Fin").Filterable(true).Sortable(true);
                     c.Add(x => x.DESCRIPCION).Titled("Descripcion").Filterable(true).Sortable(true);
                     c.Add(x => x.NOMBRE_COMPLETO).Titled("Profesor").Filterable(true).Sortable(true);
                     c.Add()
                     .Encoded(false)
                     .Sanitized(false)
                     .SetWidth(30)
                     .RenderValueAs(x => Html.ActionLink("Anotarse", "Edit", new { id = x.ID_ACTIVIDAD }, new { @class = "btn btn-primary" }));

                     c.Add()
                     .Encoded(false)
                     .Sanitized(false)
                     .SetWidth(30)
                     .RenderValueAs(x => "<button class='btn btn-link' type='button' data-toggle='collapse' data-target='#AA_@(x.ID_ACTIVIDAD)' aria-expanded='true' aria-controls='#AA_@(x.ID_ACTIVIDAD)'>Horarios</button>");

                     }).WithPaging(5).EmptyText("No data found")

                </div>
            </div>*@






        <table class="table">
            <tr>
                <th>
                    @Html.DisplayName("FECHA INICIO")
                </th>
                <th>
                    @Html.DisplayName("FECHA FIN")
                </th>
                <th>
                    @Html.DisplayName("Descripcion")
                </th>
                <th>
                    @Html.DisplayName("PROFESOR")
                </th>


                <th></th>
            </tr>

            @foreach (var item in Model.pActividad)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.FECHA_INICIO)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FECHA_FIN)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ACTIVIDAD_DESCRIPCION)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NOMBRE_COMPLETO)
                    </td>


                    <td>
                        @Html.ActionLink("Anotarse", "Edit", new { id = item.ID_ACTIVIDAD })|
                        <button class="btn btn-link" type="button" data-toggle="collapse" data-target="#AA_@(item.ID_ACTIVIDAD)" aria-expanded="true" aria-controls="#AA_@(item.ID_ACTIVIDAD)">
                            Horarios
                        </button>


                    </td>
                </tr>

                foreach (var horario in item.lHorario)
                {
                    <tr id="AA_@(item.ID_ACTIVIDAD)" class="accordion-body collapse">
                        <td></td>
                        <td>
                            @Html.Label(horario.DIA)
                        </td>
                        <td>
                            @Html.Label(horario.HORA_INICIO.ToString("hh:ss")) a
                            @Html.Label(horario.HORA_FIN.ToString("hh:ss"))
                        </td>
                        <td>
                            @Html.Label(horario.nombreLocacion)
                        </td>
                    </tr>
                }
            }
            

        </table>
        @Html.PagedListPager(Model.pActividad,i =>Url.Action("Index","Inscripcion",new { i}))
        <h2>Inscripto</h2>
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayName("FECHA INICIO")
                </th>
                <th>
                    @Html.DisplayName("FECHA FIN")
                </th>
                <th>
                    @Html.DisplayName("ESTADO")
                </th>
                <th>
                    @Html.DisplayName("PROFESOR")
                </th>


                <th></th>
            </tr>

            @foreach (var item in Model.lIncripto)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.FECHA_INICIO)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FECHA_FIN)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ACTIVIDAD_DESCRIPCION)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NOMBRE_COMPLETO)
                    </td>


                    <td>
                        @Html.ActionLink("Baja", "Baja", new { id = item.ID_ACTIVIDAD })|
                        <button class="btn btn-link" type="button" data-toggle="collapse" data-target="#bb_@(item.ID_ACTIVIDAD)" aria-expanded="true" aria-controls="#bb_@(item.ID_ACTIVIDAD)">
                            Horarios
                        </button>


                    </td>
                </tr>

                foreach (var horario in item.lHorario)
                {
                    <tr id="bb_@(item.ID_ACTIVIDAD)" class="accordion-body collapse">

                        <td>
                            @Html.Label(horario.DIA)
                        </td>
                        <td>
                            @Html.Label(horario.HORA_INICIO.ToString("hh:ss")) a
                            @Html.Label(horario.HORA_FIN.ToString("hh:ss"))
                        </td>
                        <td>
                            @Html.Label(horario.nombreLocacion)
                        </td>
                    </tr>
                }
            }
        </table>

    </section>
    <div class="content-wrapper">
        <!-- Content Header (Page header) -->
        <section class="content-header">
            <div class="container-fluid">
                <div class="row mb-2">
                    <div class="col-sm-6">
                        <h1>Calendar</h1>
                    </div>
                    <div class="col-sm-6">
                        <ol class="breadcrumb float-sm-right">
                            <li class="breadcrumb-item"><a href="#">Home</a></li>
                            <li class="breadcrumb-item active">Calendar</li>
                        </ol>
                    </div>
                </div>
            </div><!-- /.container-fluid -->
        </section>

        <!-- Main content -->
        <section class="content">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-md-3" style="display:none;">
                        <div class="sticky-top mb-3">
                            <div class="card">
                                <div class="card-header">
                                    <h4 class="card-title">Draggable Events</h4>
                                </div>
                                <div class="card-body">
                                    <!-- the events -->
                                    <div id="external-events">
                                        <div class="external-event bg-success">Lunch</div>
                                        <div class="external-event bg-warning">Go home</div>
                                        <div class="external-event bg-info">Do homework</div>
                                        <div class="external-event bg-primary">Work on UI design</div>
                                        <div class="external-event bg-danger">Sleep tight</div>
                                        <div class="checkbox">
                                            <label for="drop-remove">
                                                <input type="checkbox" id="drop-remove">
                                                remove after drop
                                            </label>
                                        </div>
                                    </div>
                                </div>
                                <!-- /.card-body -->
                            </div>
                            <!-- /.card -->
                            <div class="card">
                                <div class="card-header">
                                    <h3 class="card-title">Create Event</h3>
                                </div>
                                <div class="card-body">
                                    <div class="btn-group" style="width: 100%; margin-bottom: 10px;">
                                        <!--<button type="button" id="color-chooser-btn" class="btn btn-info btn-block dropdown-toggle" data-toggle="dropdown">Color <span class="caret"></span></button>-->
                                        <ul class="fc-color-picker" id="color-chooser">
                                            <li><a class="text-primary" href="#"><i class="fas fa-square"></i></a></li>
                                            <li><a class="text-warning" href="#"><i class="fas fa-square"></i></a></li>
                                            <li><a class="text-success" href="#"><i class="fas fa-square"></i></a></li>
                                            <li><a class="text-danger" href="#"><i class="fas fa-square"></i></a></li>
                                            <li><a class="text-muted" href="#"><i class="fas fa-square"></i></a></li>
                                        </ul>
                                    </div>
                                    <!-- /btn-group -->
                                    <div class="input-group">
                                        <input id="new-event" type="text" class="form-control" placeholder="Event Title">

                                        <div class="input-group-append">
                                            <button id="add-new-event" type="button" class="btn btn-primary">Add</button>
                                        </div>
                                        <!-- /btn-group -->
                                    </div>
                                    <!-- /input-group -->
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- /.col -->
                    <div class="col-md-9">
                        <div class="card card-primary">
                            <div class="card-body p-0">
                                <!-- THE CALENDAR -->
                                <div id="calendar"></div>
                            </div>
                            <!-- /.card-body -->
                        </div>
                        <!-- /.card -->
                    </div>
                    <!-- /.col -->
                </div>
                <!-- /.row -->
            </div><!-- /.container-fluid -->
        </section>
        <!-- /.content -->
    </div>
</content>
@section Scripts {
    <script>

        // Get Wednesdays between 15 December, 2016 and 25 February, 2017.

        $(



            function () {
                function myFunction() {
                    var input, filter, table, tr, td, i, txtValue;
                    input = document.getElementById("myInput");
                    filter = input.value.toUpperCase();
                    table = document.getElementById("myTable");
                    tr = table.getElementsByTagName("tr");
                    for (i = 0; i < tr.length; i++) {
                        td = tr[i].getElementsByTagName("td")[0];
                        if (td) {
                            txtValue = td.textContent || td.innerText;
                            if (txtValue.toUpperCase().indexOf(filter) > -1) {
                                tr[i].style.display = "";
                            } else {
                                tr[i].style.display = "none";
                            }
                        }
                    }
                }
            function getDaysBetweenDates(start, end, dayName) {
                var result = [];
                var days = { dom: 0, lun: 1, mar: 2, mie: 3, jue: 4, vie: 5, sab: 6 };
                var day = days[dayName.toLowerCase().substr(0, 3)];
                // Copy start date
                var current = new Date(start);
                // Shift to next of required days
                current.setDate(current.getDate() + (day - current.getDay() + 7) % 7);
                // While less than end date, add dates to result array
                while (current < end) {
                    result.push(new Date(+current));
                    current.setDate(current.getDate() + 7);
                }
                return result;
            }




            /* initialize the calendar
             -----------------------------------------------------------------*/
            //Date for the calendar events (dummy data)
            var date = new Date()
            var d = date.getDate(),
                m = date.getMonth(),
                y = date.getFullYear();

            var Calendar = FullCalendar.Calendar;



            // initialize the external events
            // -----------------------------------------------------------------


            var calendar = new Calendar(document.getElementById('calendar'),
                {
                    plugins: ['bootstrap', 'interaction', 'dayGrid', 'timeGrid'],
                    header: {
                        left: 'prev,next today',
                        center: 'title',
                        right: 'dayGridMonth,timeGridWeek,timeGridDay'//'dayGridMonth,timeGridWeek,timeGridDay'
                    },
                    'themeSystem': 'bootstrap',
                    //Random default events

                    editable: false,
                    droppable: true, // this allows things to be dropped onto the calendar !!!
                    drop: function (info) {
                        // is the "remove after drop" checkbox checked?
                        if (checkbox.checked) {
                            // if so, remove the element from the "Draggable Events" list
                            info.draggedEl.parentNode.removeChild(info.draggedEl);
                        }
                    }
                });
                var data = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(
                          Model.lIncripto.Select(e => new
                          {
                          title = e.ACTIVIDAD_DESCRIPCION,
                          nombre = e.NOMBRE_COMPLETO,
                          lHorario = e.lHorario,
                          fechaInicio = e.FECHA_INICIO,
                          fechaFin = e.FECHA_FIN
                          })));



            // todo serializar o deserializar
            console.log(data[0].title + data[0].lHorario[0].HORA_INICIO + data[0].lHorario[0].HORA_FIN);
            console.log("aca "+new Date(parseInt(data[0].lHorario[0].HORA_INICIO.substr(6))).getHours());




            console.log(getDaysBetweenDates(
                new Date(2016, 11, 15),
                new Date(2017, 1, 25),
                'mie'));

            console.log("este"+new Date(2016, 11, 15));
            var fechas = [];
            var periodo = {fechaS :new Date(), fechaE : new Date()};
            var evento = [];


            for (var i of data)
            {
                periodo = { fechaS: new Date(parseInt(i.fechaInicio.substr(6))), fechaE: new Date(parseInt(i.fechaFin.substr(6))) }

                console.log(i.title);
                console.log(periodo);
                for (var j of i.lHorario)
                {

                    //fechas = getDaysBetweenDates(new Date(new Date(parseInt(i.fechaInicio.substr(6))).getFullYear(), new Date(parseInt(i.fechaInicio.substr(6))).getMonth(), new Date(parseInt(i.fechaInicio.substr(6))).getDate()),
                    //    new Date(new Date(parseInt(i.fechaFin.substr(6))).getFullYear(), new Date(parseInt(i.fechaFin.substr(6))).getMonth(), new Date(parseInt(i.fechaFin.substr(6))).getDate())
                    //    , j.DIA);

                    fechas = getDaysBetweenDates(periodo.fechaS, periodo.fechaE, j.DIA);
                    periodo.fechaS.setHours(new Date(parseInt(j.HORA_INICIO.substr(6))).getHours());
                    periodo.fechaS.setMinutes(new Date(parseInt(j.HORA_INICIO.substr(6))).getMinutes());
                    periodo.fechaE.setHours(new Date(parseInt(j.HORA_FIN.substr(6))).getHours());
                    periodo.fechaE.setMinutes(new Date(parseInt(j.HORA_FIN.substr(6))).getMinutes());
                    for (var f of fechas)
                    {
                        evento.push(
                            {
                                //evento.push(
                                title: i.title,
                                start: new Date(f.getFullYear(), f.getMonth(), f.getDate(), periodo.fechaS.getHours(), periodo.fechaS.getMinutes()),
                                end: new Date(f.getFullYear(), f.getMonth(), f.getDate(), periodo.fechaE.getHours(), periodo.fechaE.getMinutes()),
                                allDay: false,
                                backgroundColor: '#00c0ef', //Info (aqua)
                                borderColor: '#00c0ef' //Info (aqua)
                            });

                    }

                    console.log(fechas);

                    //// Ejemplo de objeto evento
                    //evento.push(
                    //title: 'Lunch',
                    //start: new Date(y, m, d, 12, 0),
                    //end: new Date(y, m, d, 14, 0),
                    //allDay: false,
                    //backgroundColor: '#00c0ef', //Info (aqua)
                    //borderColor: '#00c0ef' //Info (aqua)

                }
            }

            calendar.addEventSource(evento),

            calendar.render();
            })
    </script>
}
